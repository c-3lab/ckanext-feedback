name: Tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - name: Install Python 3.10.13
        uses: actions/setup-python@v4
        with:
            python-version: "3.10.13"

      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: check out ckan version 2.10.4
        run: git submodule update --init --recursive
        working-directory: ./development

      - name: Copy .env.dev as .env
        run: |
          cp .env.dev external/ckan-docker/.env
        working-directory: ./development

      - name: Build container
        run: |
          docker compose -f external/ckan-docker/docker-compose.dev.yml -f docker-compose.yml up --build -d
        working-directory: ./development

      - name: Install ckanext-feedback
        run: |
          sleep 60
          docker exec -i ckan-docker-ckan-dev-1 bash -c "chmod 777 /srv/app/src/ckan/ckan/public/base/i18n/ja.js"
          docker exec -i ckan-docker-ckan-dev-1 bash -c "pip install /srv/app/src_extensions/ckanext-feedback"

      - name: Install requirement to run test
        run: |
          docker exec -i ckan-docker-ckan-dev-1 bash -c "pip install -r /srv/app/src/ckan/dev-requirements.txt"
          docker exec -i ckan-docker-ckan-dev-1 bash -c "pip install pytest-ckan"

      - name: db setting
        run: |
          docker exec -i ckan-docker-ckan-dev-1 bash -c "ckan -c /usr/lib/python3.10/site-packages/ckanext/feedback/tests/config/test.ini db init"

      - name: Run tests via test.sh
        run: |
          docker exec -i ckan-docker-ckan-dev-1 bash -c "/srv/app/src_extensions/ckanext-feedback/test.sh /usr/lib/python3.10/site-packages/ckanext/feedback/tests"

      # - name: Run test
      #   run: |
      #     docker exec -i ckan-docker-ckan-dev-1 bash -c "CKAN_SQLALCHEMY_URL= CKAN_DATASTORE_READ_URL= CKAN_DATASTORE_WRITE_URL= pytest --cov-report=xml:/tmp/coverage.xml --ckan-ini=/usr/lib/python3.10/site-packages/ckanext/feedback/tests/config/test.ini --cov=ckanext.feedback --cov-branch --disable-warnings --cov-report=term-missing /usr/lib/python3.10/site-packages/ckanext/feedback/tests"

      - name: copy coverage.xml
        if: always()
        run: |
          docker cp ckan-docker-ckan-dev-1:/tmp/coverage.xml ./development/coverage.xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./development/coverage.xml
          fail_ci_if_error: true