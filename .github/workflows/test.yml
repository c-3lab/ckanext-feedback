name: Tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - name: Install Python 3.10.13
        uses: actions/setup-python@v4
        with:
            python-version: "3.10.13"

      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: check out ckan version 2.9.7
        run: git submodule update --init --recursive
        working-directory: ./development

      - name: Copy .env.template as .env
        run: |
          cp external/ckan/contrib/docker/.env.template external/ckan/contrib/docker/.env
          sed -i -e 's/zope.interface==4.3.2/zope.interface==5.0.0/' external/ckan/requirements.txt
        working-directory: ./development

      - name: Build container
        run: |
          docker compose -f external/ckan/contrib/docker/docker-compose.yml -f docker-compose.yml up --build -d
        working-directory: ./development

      - name: Install ckanext-feedback
        run: |
          docker exec -i ckan bash -c "pip install /opt/ckanext-feedback"

      - name: Install requirement to run test
        run: |
          docker exec -i ckan bash -c "pip install -r /usr/lib/ckan/venv/src/ckan/dev-requirements.txt"
          docker exec -i ckan bash -c "pip install pytest-ckan"

      - name: db setting
        run: |
          docker exec -i ckan bash -c "PGPASSWORD=ckan createdb ckan_test -O ckan -E utf-8 -h db -U ckan"
          docker exec -i ckan bash -c "ckan -c /usr/lib/ckan/venv/lib/python3.8/site-packages/ckanext/feedback/tests/config/test.ini db init"

      - name: Run test
        run: |
          docker exec -i ckan bash -c "CKAN_SQLALCHEMY_URL= CKAN_DATASTORE_READ_URL= CKAN_DATASTORE_WRITE_URL= pytest --cov-report=xml --ckan-ini=/usr/lib/ckan/venv/lib/python3.8/site-packages/ckanext/feedback/tests/config/test.ini --cov=ckanext.feedback --cov-branch --disable-warnings --cov-report=term-missing /usr/lib/ckan/venv/lib/python3.8/site-packages/ckanext/feedback/tests"
          docker cp ckan:./coverage.xml ./coverage.xml
        working-directory: ./development

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          working-directory: ./development